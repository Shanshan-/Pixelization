#include <GL\glew.h>
#include <GL\freeglut.h>
#include <opencv2\opencv.hpp>
#include <iostream>

/**
* glVertex2f(float x, float y).
* The point (0.0, 0.0) represents the middle of the window (not the top left corner).
* The "2f" suffix means 2 values of float type (x and y).
*/
void displayMe(void) {
	glClear(GL_COLOR_BUFFER_BIT);
	glBegin(GL_POLYGON);
	glVertex2f(0.0, 0.0);                    // bottom left
	glVertex2f(0.5, 0.0);                    // bottom right
	glVertex2f(0.5, 0.5);                    // top right
	glVertex2f(0.0, 0.5);                    // top left
	glEnd();
	glFlush();
}

void glTest(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE);
	glutInitWindowSize(300, 300);                    // window size
	glutInitWindowPosition(500, 500);                // distance from the top-left screen
	glutCreateWindow("BadproG - Hello world :D");    // message displayed on top bar window
	glutDisplayFunc(displayMe);
	glutMainLoop();
}

int main(int argc, char** argv) {
	bool mux = FALSE;
	if(mux)
		glTest(argc, argv);
	else {
		cv::Mat image = cv::imread("./table1.jpg");
		cv::Mat img2 = cv::Mat(600, 800, CV_8UC3, cv::Scalar(100, 250, 30));

		// Check for failure
		//if (image.empty())
		//{
		//	std::cout << "Could not open or find the image" << std::endl;
		//	std::cin.get(); //wait for any key press
		//	return -1;
		//}

		cv::String windowName = "The Guitar"; //Name of the window

		cv::namedWindow(windowName, cv::WINDOW_NORMAL); // Create a window

		if (image.empty())
			cv::imshow(windowName, img2); // Show blank image inside window
		else
			cv::imshow(windowName, image); // Show our image inside the created window.

		cv::waitKey(0); // Wait for any keystroke in the window

		cv::destroyWindow(windowName); //destroy the created window
		return 0;

	}

	return 0;
}